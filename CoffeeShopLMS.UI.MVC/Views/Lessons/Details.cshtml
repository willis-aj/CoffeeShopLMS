@model CoffeeShopLMS.DATA.EF.Lesson

@{
    ViewBag.Title = Html.DisplayFor(model => model.LessonTitle);
}

<h2>@ViewBag.Title</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Introduction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Introduction)
        </dd>

        @if (Model.VideoURL != null)
        {
            <dt>
                Video
            </dt>

            <dd>
                <div id="player"></div>
            </dd>
        }

        @if (Model.PdfFileName != "DefaultPDF.pdf")
        {
            <dt>
                PDF:
            </dt>

            <dd>
                @*@Html.DisplayFor(model => model.PdfFileName)*@
                <embed src="~/Content/pdfs/@Model.PdfFileName" width="800" height="400" />
            </dd>


        }


        <dt>
            @Html.DisplayNameFor(model => model.Cours.CourseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cours.CourseName)
        </dd>

    </dl>
</div>
<p>
    @if (User.IsInRole("Admin"))
    {
        <span>
            @Html.ActionLink("Edit", "Edit", new { id = Model.LessonID }) |
        </span>
    }
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts{
    <script src="http://www.youtube.com/player_api"></script>

    <script>
        // create youtube player
        var player;
        var h;
        var w;

        if ($(window).width() > 850) {
            h = '360';
            w = '640';
        }
        else{
            h = '168.75';
            w = '300';
        }
        function onYouTubePlayerAPIReady() {
        player = new YT.Player('player', {
        height: h,
        width: w,
        modestbranding: 1,
        videoId: '@Model.VideoURL',
        playerVars: {
        rel: 0,
        autoplay: 0,
        disablekb: 0,
        showsearch: 0,
        showinfo: 0,
        controls: 1,
        fs: 1,
        hd: 1,
        html5: 1,
        iv_load_policy: 3
        },
        events: {
        onReady: onPlayerReady,
        onStateChange: onPlayerStateChange
        }
        });
        }
        // autoplay video
        function onPlayerReady(event) {
        event.target.playVideo();
        }
        
        // when video ends
        function onPlayerStateChange(event) {
        if(event.data === 0) {
        //do something on end;
        alert('done');
        }
        }
    </script>
}